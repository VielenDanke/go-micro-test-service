syntax="proto3";

package testservice;
option go_package = "proto;pb";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

message SingleMessageRequest {
    string message_id = 1;
}

message SingleMessageResponse {
    string message_id = 1;
    string message_description = 2;
}

message SaveMessageRequest {
    string description = 1;
}

message SaveMessageResponse {
    string message_id = 1;
}

message GetListMessageRequest {}

message GetListMessageResponse {
    string message_id = 1;
    string message_description = 2;
}

message APIRequest {}

message APIResponse {
    string result = 1;
}

message Error {
    string uuid = 1;
    string msg = 2;
}

service MessageService {
    rpc MessageByID(SingleMessageRequest) returns (SingleMessageResponse) {
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            operation_id: "MessageById";
                responses: {
                    key: "default";
                    value: {
                        description: "Error response";
                        schema: {
                            json_schema: {
                                ref: ".testservice.Error";
                            }
                        }
                    }
                }
        };
        option (google.api.http) = {
            get: "/api/v1/messages/{message_id}";
        };
    };
    rpc SaveMessage(SaveMessageRequest) returns (SaveMessageResponse) {
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            operation_id: "SaveMessage";
                responses: {
                    key: "default";
                    value: {
                        description: "Error response";
                        schema: {
                            json_schema: {
                                ref: ".testservice.Error";
                            }
                        }
                    }
                }
        };
        option (google.api.http) = {
            post: "/api/v1/messages";
        };
    };
    rpc GetMessageStream(GetListMessageRequest) returns (stream GetListMessageResponse) {
        option (google.api.http) = {
            get: "/api/v1/messages"
        };
    };
    rpc GetValidAPICall(APIRequest) returns (APIResponse) {
        option (google.api.http) = {
            get: "/api/v1/valid"
        };
    }
    rpc GetInvalidAPICall(APIRequest) returns (APIResponse) {
        option (google.api.http) = {
            get: "/api/v1/invalid"
        };
    }
};